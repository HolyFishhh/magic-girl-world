省流减少字数版：只说重点
由于有人说字数太多没有耐心？原理没弄明白？我尽量用几句话讲清楚！
当然如果你看不懂，那请去看完整版吧。

嘿！想不想让你的AI角色记住你对ta好不好，甚至根据这些“记忆”改变她说话的方式？

酒馆有两个神奇小功能，就像给AI准备了小纸条：

setvar (设置/写纸条): 用来在纸条上写东西。
getvar (获取/读纸条): 用来看纸条上写了什么。
怎么写纸条 (setvar):

格式是： {{setvar::纸条名字::纸条内容}}

比如，我们想创建一个叫“络络的好感度”的纸条(变量)，上面写个数字“80”：
{{setvar::络络的好感度::80}}

这就告诉酒馆：“记住，‘络络的好感度’现在是80。”

怎么读纸条 (getvar):

格式是： {{getvar::纸条名字}}

如果我们想知道络络的好感度是多少：
{{getvar::络络的好感度}}

酒馆看到这个，就会把它换成我们之前写在纸条上的内容。

举个例子：

你可以在世界书（World Info）里写：
络络现在的好感度是：{{getvar::络络的好感度}}

因为我们前面用 setvar 写过纸条了，所以这里就会显示：
络络现在的好感度是：80

简单类比一下：

setvar 就像你在你的用户设置里写下你的名字叫“小明”。
getvar 就像你在世界设定里使用 {{user}}，它会自动变成“小明”。
当然，我们希望的是 AI自己 能更新这些“纸条”，比如好感度增加了，AI自己把它从80改成82。AI可没法改你的用户名，对吧？

让AI来更新纸条(更新变量)

问题来了：如果你直接让AI在聊天里输出 {{setvar::络络的好感度::82}}，你会发现这条消息发出去就消失了，好感度变成了82，删掉消息，好感度仍然是82…这里有个明显的问题——我不能重roll消息了？重roll消息仍然会保留设置过的好感度！

解决方法：特殊的“暗号”正则替换脚本

为了让AI能成功更新纸条，我们需要让AI用一种特殊的格式（像暗号一样）来说话。然后我们通过一个设置（用到了叫做“正则表达式”的东西，你不用懂它怎么工作的），把这个暗号自动变成可以重新roll方便管理，并且AI能看懂的 setvar (写纸条)命令。

这个正则长这样：

@纸条名字=新内容@
或者，如果想记录变化：@纸条名字=旧内容⇒新内容@
你需要做的：

找到酒馆里的正则表达式替换设置（通常在 扩展 -> 正则 ），添加一条新的正则脚本：

匹配 (Match): @(.*?)@?=(?:.*?⇒)?'?(.*?)'?((@$)|(?=@))
替换为 (Replace): {{setvar::$1::$2}}
（我更推荐你去我的示例角色卡中，直接移动到全局，然后移动到你的角色卡）

设置好之后，AI就可以这样更新纸条了：

AI想把天气改成“晴天”，它只需要在回复里说：@天气=晴@
AI觉得络络好感度从80升到82了，它可以说：@络络的好感度=80⇒82@
酒馆看到这些暗号，就会在后台默默地帮你把“天气”纸条内容改成“晴”，把“络络的好感度”纸条内容改成“82”。

这样一来，所有用到 {{getvar::络络的好感度}} (获取纸条)的地方，都会自动显示最新的数字 82 了！

更酷的用法：让世界设定“活”起来 (提示词模板)

现在AI能记住并修改纸条了，我们怎么用这些纸条让角色表现得不一样呢？答案是使用“提示词模板” (Prompt Templates)。

这就像给世界书加了“如果…那么…”的规则。

基础想法：

如果“络络的好感度”纸条上的数字小于20，那么人物设定里就显示“络络不喜欢你”。
如果数字大于等于20，那么世界设定里就显示“络络喜欢你”。

怎么写这种规则？

我们需要用特殊的符号 <%_ 和 _%> 把规则包起来，告诉酒馆这里是“指令”，不是普通的文字。

简化理解版 (先不用管符号，这里代码是故意错误的并且使用了中文，为了方便你理解！):

// 先拿到“络络的好感度”纸条上的数字，暂时叫它“好感度”，其中'='的意思是将等于号左测内容设置为右侧内容
设置 好感度 = 获取纸条内容(络络的好感度)

// 开始判断
if (好感度 < 20) {络络不喜欢user} //如果好感度小于20，那么人物设定中这里将显示络络不喜欢user
else {络络喜欢user}  // 否则（大于等于20），人物设定就是络络喜欢user
其中，设置是const，

const 好感度 = ... 的意思可以简单理解为：“去读一下‘络络的好感度’那张纸条，把上面的数字拿过来，我们接下来就用‘好感度’这个词来代表这个数字。”

if 就是“如果”，else 就是“否则”。

实际写在提示词模板里的格式：

<%_ const 好感度 = getvar('络络的好感度'); _%>

<%_ if (好感度 < 20) { _%>
络络根本不认识user~~~ 这里可以写很多关于低好感度的描述...

<%_ } else if (好感度 < 40) { _%>
络络觉得user还行，是朋友啦── 这里写朋友阶段的描述...

<%_ } else { _%>
络络最最爱user！(｡♥‿♥｡) 这里写高好感度的描述...
<%_ } _%>
再来个天气例子：

<%_ const 天气 = getvar('天气'); _%>        // 读取“天气”纸条内容

<%_ if (天气 == '晴') { _%>                 // 注意：判断文字是否相等，要用两个等于号 ==，文字要加引号 ''
今天是晴天，络络要去公园晒太阳！☀️
<%_ } _%>                                  // 单独的 if 结束

<%_ if (天气 == '下雨') { _%>
今天下雨了，笨蛋络络出门又忘记带伞了...🌧️
<%_ } _%>                                  // 另一个单独的 if 结束
发生了什么？!写的都是什么！

这些都是EJS语法，也就是提示词模板的功能！

你不需要真的会写也不需要能读懂代码！

因为这是我们之后要讲的东西！实际上，最后不是需要你自己敲，而是将我写好的文件发送给AI，让AI来写。

但是你至少要知道这些的原理~否则做不到融汇贯通呢！

如果你真的很想现在就知道，我简单讲讲，

假设我们之前让AI把好感度设置成了 82，天气设置成了 下雨。

那么酒馆在处理上面的模板时：

读到好感度是82。判断 82 < 20 不成立，82 < 40

也不成立，所以执行 else 部分，

世界书实际内容是"络络最最爱user！(｡♥‿♥｡)" 这段。

读到天气是 ”下雨”。判断 天气 == '晴' 不成立。

判断 天气 == '下雨' 成立，

所以世界书里实际内容是 "今天下雨了，笨蛋络络出门又忘记带伞了...🌧️" 这段。

别忘了，好感度啊~天气啊，我们都可以教给AI来完成。

最终，AI看到的世界设定就会包含这两段根据当前“纸条”（变量）内容动态生成的信息！

总结一下：

用 {{setvar::名字::内容}} 创建或修改“记忆纸条”。
用 {{getvar::名字}} **读取“记忆纸条”**上的内容。
设置好正则表达式替换，让AI可以通过 @名字=内容@ 的“暗号”来更新纸条。
在提示词模板里，用 <%_ ... _%> 包裹指令，使用 getvar('名字') 获取纸条内容，再用 if/else if/else 根据内容判断，动态地改变世界书或人物设定的文字！
现在你已经掌握了基础！你可以用这个方法来制作：

根据好感度变化的角色态度。
根据一天中的时间或天气变化的环境描述或角色行为。
一个简单的物品栏（比如 @主角背包=钥匙、酸奶、作业本@）。
想想看，还能有什么有趣的玩法呢？发挥你的想象力吧！

如果你想管理很多角色的不同变量，或者想实现更复杂的世界变化，

可能需要更系统地组织你的“纸条”名字和模板逻辑。但基本原理就是这些啦！

请注意哦，如果你单纯的setvar（设置纸条），AI实际上是看不见的！

因此，你必须先设置之后，再在世界书、人物设定里用合适的位置getvar（读取纸条）！

比如你必须先{{setvar::角色名字::络络}}

再在人物设定里写上主角名字:{{getvar::角色名字}}，这样，AI看到的人物设定就会是主角名字:络络

现在你已经明白了酒馆变量以及提示词模板的用法了，你已经可以写一个分阶段不同好感的人设。
再多想想，那里放着的可以不是数值？除了大于小于还可以等于？
更多想法就交给你啦

如果以上内容你都弄懂了，或者说加上<% %>就没看懂，接下来的教程里还有详细的讲解，以及如何管理你的变量：
毕竟如果你有好几个角色，还想弄个物品栏变量、背包变量，想穿越世界让不同世界有不同提示词，想让世界慢慢发生重大改变，大概率想不到怎么写能让AI最简单的听懂吧？

请看教程吧，可以适当跳过你会的部分。

真正的开始喵（放心！也不难的！）
大家有发现酒馆插件里多了一个扩展叫做提示词模板语法吗？

【酒馆扩展】提示词模板语法

就是这个！请注意，手机也可以写喔！

作者原话
简单来说，就是可以在世界书、预设、QR、角色定义等各种地方写Javascript代码。例如用变量、条件判断逻辑等控制提示词是否发送给LLM。

什么意思呢？就是可以用代码来控制让Claude这样的AI能看到哪些世界书内容，又看不到哪些世界书内容。
大家玩卡写卡多了之后一定会发现，
实际上发给AI的内容不是越多越好，如果东西多了的话容易让他不知道重点在哪里，
因此酒馆有绿灯世界书，可以通过看到某些关键词来决定是否将内容发送给AI。

但是说实话……绿灯这种方法也不是特别好用，而且很繁琐呢TT

虽然站内已经有MAG老师做的详细教程，但是对于不懂得任何编程和编程思想，甚至都不太会使用电脑的人来说，仍然有些难以理解……

因此我将用最简单的文字告诉大家，如何让你的卡变得更多玩法！

（如果哪里不懂欢迎私信@lolodesu_，我会根据你提供的信息补充教程和整理Q&A！感谢！）

阅读本文前你需要掌握的基础内容
一点点耐心
了解酒馆的基本使用方法
基本了解世界书的蓝绿灯、深度意味着什么（绿灯选择触发，蓝灯必然触发，深度越低越重要之类的）
大概知道正则的作用是什么（让AI用简单的格式输出，将AI输出的简单格式替换为我们需要的复杂格式）
学会这些你会获得什么？
一个可以具有成长性，更加动态变化的人物！为你的人物设置好感度、亲密度、熟悉度、多重人格？是否失忆？这些都可以轻松做到！
构建一个会发生变化的世界！当我想制作一个角色卡是游戏里的人物，而我一开始在游戏里和他玩耍，之后又可以选择把他带到现代的现实世界
也许更加贴近计算机语言，基于YAML的让AI更好理解的提示词格式？
也许……可以用来让claude保守秘密？
总之本文就是教你，如何让AI处于故事不同阶段（比如情节、好感度、时间、地点等），能看到不同的世界书内容，生成不同的故事！具体怎么用，全靠你的想象力

快速上手
需要做的事情只有:

安装酒馆助手和提示词模板
读一下下方的全部文字（辛苦了！），然后下载这个角色卡
写！
开始
实践是最好的学习方法！让我们直接以一个实际内容来学习

我的目标是: 为络络这个角色增加变量，也就是数值随时变化的量，
前文中，我们将他称为了“纸条”呢，还记得吗？

我希望为她增加亲密度，这样随着故事进展，不同的亲密度络络的表现应该完全不同
我希望可以判断络络是否和USER有微信好友，这样络络就可以给user发消息，而不会出现故事上两人刚认识但是络络会发消息的问题
我想让络络是个注重仪式感的人，所以希望时刻判断两人恋爱天数，这样在特殊的日期络络会发生特殊的事件！
怎么样，听上去是不是比较有趣？而且是直接指挥小克难以做到的事情──你很难保证小克真的能搞懂两人是否加了好友、什么时候开始恋爱和恋爱多少天。

但是你使用变量+提示词模板的话！小克只需要做一个简单的加法。

而当变量的数值合适的时候，我们提前写好的提示词: 比如高亲密度络络的表现、有好友之后再告诉他发消息的格式、特定恋爱天数络络会怎样庆祝。

那么，为了做到这些，需要做什么？

需要做的是:

设置变量，并告诉AI变量都有什么，是什么意思
告诉AI如何修改变量，修改变量的规则是什么
使用提示词模板来让变量处于不同值的时候，不同的变量让AI看到不同的世界书内容
实际上呢，只要能达成上方的目标具体怎么做都可以，但是我会给出一个非常好用而且容易修改的，是青空莉老师教我的方法:

谢谢青空莉喵

我来给你一个示例！看看就能看懂，
请直往下翻到第一条世界书！为了方便你理解，我写了三个不同的版本

以下是你可能不了解的内容，如果发现有看不懂再回来翻看以下两条:

奇怪的被花括号包裹的东西是什么？:

类似于{{getvar::变量.络络.亲密度}}的东西，是什么？
实际上呢，这个花括号亲密度之类的，就和{{user}}一样，是酒馆自己的功能，{{user}}也是一个变量，意思就是在这个位置放入用户的名字，
而{{getvar::变量.络络.亲密度}}的意思就是，在这个位置放入变量.络络.亲密度的实际数值！
当然，我们现在还没有为这个变量设置任何数值，也没有让AI来更改这个数值，所以这里我也不知道实际上会放什么。
但是请让我们先写好世界书，之后在第一条消息的最前方设置这些数值最开始的数值（也就是初始化）
如果我们设置了变量.络络.亲密度=0，
再在世界书写上`亲密度: {{getvar::变量.络络.亲密度}}`，那么实际上AI看到的就是`亲密度: 0`
两个斜杠是什么？:

`//`这个符号后方的内容是我对你的注释，是为了告诉读者是什么，不是要写进世界书里喔！
请你专注下精神来读一下`//`后的内容！真的很简单！
可能稍微比较复杂，但是只要你认真阅读每一行，一定是可以看懂的！

下方内容是世界书内容，会发送给AI，主要包含: 变量列表、更新变量的规则、小COT（思维链）来让AI输出更新变量的格式

实际上呢，最困难的就是让ai稳定的理解每个变量的含义以及更新变量，而下方是青空莉超级好用的格式，可以让小克非常稳定的更新变量！当然，你也可以自己构思如何让AI来更新变量

请先总体简单预览一下！不需要仔细阅读，然后看下方的带有注释解释的版本！

注: 这只是青空莉交给我的提示词写法，你不一定要这样写，但是一定要包含相似功能的文字说明，也就是要告诉AI变量是什么、有哪些、怎么命名、怎么更新、更新的格式是什么

请不要被这里复杂的结构吓到！你只需要感受一下x
第一条世界书 (一共只需要两条？) 这里是预览，请看最下方的解析，看懂之后回来再看ovo

络络:
  亲密度: '{{getvar::变量.络络.亲密度}}'
    是否添加微信好友: '{{getvar::变量.络络.是否添加微信好友}}'
    恋爱天数: '{{getvar::变量.络络.恋爱天数}}'
海海:
  亲密度: '{{getvar::变量.海海.亲密度}}'
  黑化阶段: '{{getvar::变量.海海.黑化阶段}}'
世界:
  当前时间阶段: '{{getvar::变量.世界.当前时间阶段}}'
  当前所在世界: '{{getvar::变量.世界.当前所在世界}}'
规则:
  可用性: 仅使用"变量"文档中列出的变量，不得伪造新变量
  名称: 由根节点到叶节点的完整路径组成，以"."分隔，例如 变量.络络.亲密度
check list:
  - 根据角色对{{user}}行为来更新对应角色的"亲密度"变量，仅在角色本人在场或感知到{{user}}时更新±(3~7)
  - 根据故事来判断络络是否和{{user}}成为了微信好友，若是则更新`变量.络络.是否添加微信好友`=1，否则为0
  - 根据故事来判断络络是否和{{user}}恋爱，若是则开始更新`变量.络络.恋爱天数`，每度过一天增加1

**本次响应你必须在故事结束后回答下列问题输出以下格式的内容**
格式: |-
  <UpdateVariable>
  <Analysis>
  ${
   - 本次行动用户是否和角色互动，互动的内容是否应当增加亲密度，亲密度应当增加多少？
   - 用户和角色是否已经添加微信好友？
   - 用户和角色是否正在恋爱？是否度过了一天来增加恋爱天数？
  }
  </Analysis>
  @${variable}=${old}⇒${new}@
  </UpdateVariable>
不理解吧?

是不是有些看不懂！

大概是你不熟悉YAML格式，没关系，我给你写一个不使用YAML格式而全部使用自然语言的

{{getvar::变量.络络.亲密度}}还记得吗？getvar实际上就是读纸条！

当然我没还没设置过这些数值，也就是没有写纸条，因为我们在写世界书。

之后我们会在第一条消息（开局）的时候进行初始化，

也就是将这些数值设置成0啊或者开局时候合适的数值，请你按下疑惑之后我会告诉你。

刚刚的世界书内容，也就是发送给AI的内容，大概说了这些事情：

以下是络络的当前变量数值:
  亲密度: '{{getvar::变量.络络.亲密度}}'
  是否添加微信好友: '{{getvar::变量.络络.是否添加微信好友}}'
  恋爱天数: '{{getvar::变量.络络.恋爱天数}}'

以下是海海的当前变量:
  亲密度: '{{getvar::变量.海海.亲密度}}'
  黑化阶段: '{{getvar::变量.海海.黑化阶段}}'

以下是世界的当前变量:
  当前时间阶段: '{{getvar::变量.世界.当前时间阶段}}'
  当前所在世界: '{{getvar::变量.世界.当前所在世界}}'

你需要每次对话都更新这些变量！

更新变量时候，一定要遵循这些规则:
  1. 亲密度在角色好感提升的时候增加1到3点
  2. 是否添加好友在两人拥有微信好友的时候变成1，不然就一直是0
  3. 恋爱天数在两人恋爱的那天开始，每度过一天增加1
  4. 黑化阶段在海海吃醋的时候增加3到8点，或者在海海恢复正常的时候减少3到8点
  5. 世界中的当前时间阶段每次对话都增加5到15点，在每天结束的时候重置为0
  6. 如果{{user}}死了，则当前所在世界设置为冥界，否则为现实

最后，请你在对话结束后回答以下问题后更新变量:
  1. 是否有亲密接触，而是增加亲密度？
  2. 两人是否开始恋爱？是否要增加天数
  3. 海海吃醋了吗？增加黑化指数吗？
  4. 现在度过一天了吗？应该增加多少时间，或者应该重置为0？
  5. {{user}}是否死了？
更新变量的格式是: @变量的名字=旧的数值⇒新的数值@
结构大概是: 变量、规则、检查清单、格式这四部分内容！

上方的是为了方便你理解，去掉了复杂的计算机专业的用语和符号，为了方便你理解我都说了什么。

请你不要直接使用上方的简单格式，这个格式真的不好用！

在你理解了上方的格式之后，请你回过头去看那个比较难以理解的YAML格式，

然后是带注释版本的！

请你仔细阅读!，

带着//的文字是注释或者说备注！也就是需要你阅读的部分:

变量:
//格式无所谓喔，我这样写法是YAML的写法，AI比较容易理解！你也可以用来做填空题，把角色名字，变量名字，以及规则改掉就直接能用！（如果真的是当填空题修改的话，请使用一开始的英文版本！）

 络络:
   亲密度: '{{getvar::变量.络络.亲密度}}'
   //请你看看，最上方的是变量冒号、之后是络络冒号、然后是亲密度冒号。这是一种明显的层级关系！
   //所以，请你看看我们的变量名字，那就是变量.络络.亲密度，
   //这是一种很好的利用AI的方法，不需要过于复杂的去让AI记住亲密度的变量名字是什么，
   //而只需要用这种写法，AI自己就明白亲密度的变量名是 变量.络络.亲密度！

   是否添加微信好友: '{{getvar::变量.络络.是否添加微信好友}}'
   恋爱天数: '{{getvar::变量.络络.恋爱天数}}'

 海海:
   //是的！你可以不止写一个角色喔

   亲密度: '{{getvar::变量.海海.亲密度}}'
   黑化阶段: '{{getvar::变量.海海.黑化阶段}}'

 世界:
   //甚至可以不只是写角色！

   当前时间阶段: '{{getvar::变量.世界.当前时间阶段}}'
   当前所在世界: '{{getvar::变量.世界.当前所在世界}}'
规则:
  //这里我用来告诉AI变量是什么！

  可用性: 仅使用“变量”文档中列出的变量，不得伪造新变量
  //告诉AI不许自己乱编变量！

  名称: 由根节点到叶节点的完整路径组成，以“.”分隔，例如 变量.络络.亲密度
  //这里约定了变量的命名方式，也就是变量.角色名.变量名，如果你看了刚刚的备注，就知道这样很清晰对吧？而且在计算机领域很常用，所以AI可以理解！

检查清单:
  //清单！这里用来写每个变量应该在什么时候被更新！

  - 根据角色对{{user}}行为来更新对应角色的"亲密度"变量，仅在角色本人在场或感知到{{user}}时更新±(3~7)
  //这里告诉了AI，亲密度应该怎么增加！我写的比较抽象，用任何人类听得懂的语言来写就可以，这里我是告诉小克，角色可以被用户的行为影响来增加减少亲密度，亲密度增加的幅度是3~7

  - 根据故事来判断络络是否和{{user}}成为了微信好友，若是则更新`变量.络络.是否添加微信好友`=1，否则为0

  - 根据故事来判断络络是否和{{user}}恋爱，若是则开始更新`变量.络络.恋爱天数`，每度过一天增加1

  本次响应你必须在故事结束后回答下列问题输出以下格式的内容: |-
  //很经典的COT写法！大概是让大模型自己来思考下方问题给出答案!

格式: |-
  <更新变量>     //更新变量！
  <分析>    //分析！也就是COT
   ${
    - 本次行动用户是否和角色互动，互动的内容是否应当增加亲密度，亲密度应当增加多少？
    - 用户和角色是否已经添加微信好友？
    - 用户和角色是否正在恋爱？是否度过了一天来增加恋爱天数？
   }
  </分析>//变量格式！这个是我们设置的，之后会通过正则来替换成酒馆的格式，因为酒馆的格式对于AI来说很抽象容易出错
  @${variable}=${old}⇒${new}@
  </更新变量>
注意喔，实际上要写进去的内容不包含//后方的注释，//注释只是为了及时告诉你哪个部位是什么意思！

还挺多的是吧？你有理解吗？

事实上你不需要真的理解，只需要知道为了实现你的目标，你应该修改什么？比如修改角色的名字，变量的名字，变量的更新规则等。

如果你能看懂，请你回到上方YAML格式那里，对有备注（注释）和无备注（注释）来对比着看

再来看以下，我们需要更多的内容有:
变量(variable): 都有什么变量？
检查清单(check list): 变量怎么改？
格式(format): 让AI回答一些问题之后再改变量！这样更准确和稳定

当然，上方的都是中文，这样很占用token，你了解了大概结构之后更推荐使用英文来写（我是让AI来翻译成英文的！）

以下是一个实际操作的例子，如果你想用和我一样的格式，

请你根据以下的内容作为参考:

---
变量:
  络络:
    亲密度: '{{getvar::变量.络络.亲密度}}'
    下次响应界面选择判断: '{{getvar::变量.络络.下次响应界面选择判断}}'
    当前时间阶段: '{{getvar::变量.络络.当前时间阶段}}'
    阅读日记数量: '{{getvar::变量.络络.阅读日记数量}}'
    拥有联系方式: '{{getvar::变量.络络.拥有联系方式}}'
rule:
  availability: only use variables listed in `变量` document, don't fabricate new variables
  name: consists of full path from root to leaf node and demilited by '.', such as `变量.络络.亲密度`
  check list:
    - Update '亲密度' by ±(3~7) according to characters' attitudes towards <user>'s behavior respectively only if they're currently aware of it
    - Update '下次响应界面选择判断' to 1, 2, or 3 ONLY when the storyline progresses to specific points:
      - Core Variable Update: Focuses on updating the variable '下次响应界面选择判断'.
      - Condition 1 (Mandatory Diary View): When the storyline reaches a point where viewing the diary is required, set '下次响应界面选择判断' to 1, and simultaneously output '[点击查看日记]' and '[拒绝查看日记]' options.
      - Condition 2 (Emotional/Climax CG): When the plot approaches an emotional or climactic CG scene (e.g., confession, farewell, reconciliation, or other emotional peak), set '下次响应界面选择判断' to 2.
      - Condition 3 (Scene with Erotic Intent): When the plot approaches a scene with erotic intent, set '下次响应界面选择判断' to 3.
      - Reset Rule: If the current value of '下次响应界面选择判断' is already 1, 2, or 3, immediately reset it to 0.
      - Default Rule: Otherwise (if the conditions for setting to 1, 2, or 3 are not met), set '下次响应界面选择判断' to 0.
      - Special Case (Optional Diary View): If it seems the diary can be viewed next but it is not absolutely required, do not modify the '下次响应界面选择判断' value, and instead only output the '[点击查看日记]' option at the bottom.
    - Update '当前时间阶段': +(1~5) for meaningful events, +(5~15) for idle periods, +(10~20) between major phases; reset to (0) when day ends (~83+); keep between (0-99); always prioritize narrative flow
    - Update '阅读日记数量' by +1 when <user> read a diary
    - Update `拥有联系方式` to 1 when Luoluo and <user> exchange contact details.
**本次响应你必须在故事结束的时候输出以下格式内容，但允许变量不更新**
format: |-
  <UpdateVariable>
  <Analysis>$(IN ENGLISH, no more than 80 words)
  ${
  - calculate time passed: ...
  - Should the current storyline progression include viewing 络络's diary?: [Yes/No]
  - Does the current storyline progression lead directly into an emotional or climactic CG scene?: [Yes/No]
  - decide whether dramatic updates are allowed as it's in a special case or the time passed is more than usual: ...
  - analyze every variable based on its corresponding `check`: ...
  }
  </Analysis>
  @${variable}=${old}⇒${new}@
  </UpdateVariable>
可以看到，我的角色只有一个，并且没有设置世界之类的，络络角色下的变量五个，分别是亲密度、界面、时间、日记数量和是否有联系方式。并且写了详细的变量应该如何更新，这是因为我测试发现AI不太能理解我的意图，所以写的很多，如果你希望用中文写其实也可以？我更推荐发送给AI让他帮你翻译成英文喔──

以上是最最复杂的部分，你可能会有些疑惑，这样我们告诉了变量又有什么用呢？

请看，以下是设置好变量后，除了告诉AI目前的亲密度是多少以外，我们还可以做什么:

另一个世界书！我们还可以根据不同的亲密度，让AI演绎不同的人设！
终于用到提示词模板了！同样也是中文版，方便你来阅读！:

---
角色阶段://这些都是个人的写法！大概是上方告诉AI关联变量、角色指导、变化倾向是什么，之后会在选择性发送的提示词中使用这些小标题。你也可以使用你自己喜欢的写法喔，只需要让AI看懂就可以！
  描述: 经过剧情发展后角色成长得到的新人设
  关联变量: 各角色的阶段关联有不同的变量，仅用于判断其角色阶段是否应该发生变化，不影响阶段的具体人设
  角色指导: 角色在这个阶段会采取的行为和态度等
  变化倾向: 随着associated variable接近下一阶段，角色逐渐发生的变化

络络:
  关联变量: 亲密度({{getvar::变量.络络.亲密度}})
  阶段名称:
    阶段1: 暗中观察(20以下)
    阶段2: 谨慎靠近(20~39)
    阶段3: 敞开心扉(40~59)
    阶段4: 依恋信任(60~79)
    阶段5: 永恒的爱(79~100及以上)

络络的行为必须优先遵守以下指导:
<%_ const 亲密度 = getvar('变量.络络.亲密度'); _%> //注意！这里复杂的东西就是提示词模板支持的js代码！看下方描述，我来告诉你怎么看懂，真的非常非常简单的！
<%_ if (亲密度 < 20) { _%>
  角色指导: 目前络络对{{user}}并不熟悉，络络应该对USER很冷淡。
  变化倾向: 随着亲密度增加，络络会变得更加关心。
<%_ } else if (亲密度 > 40) { _%>
  角色指导: 络络开始对{{user}}产生好感，开始主动关心{{user}}。
  变化倾向: 随着亲密度增加，络络会变得爱上{{user}}。
<%_ } else if (亲密度 > 60) { _%>
  角色指导: 络络对{{user}}产生爱意，开始主动关心{{user}}。
  变化倾向: 随着亲密度增加，络络会变得爱上{{user}}。
<%_ } else if (亲密度 > 80) { _%>
  角色指导: 络络会对{{user}}表白，
  变化倾向: 随着亲密度增加，络络会对{{user}}死心塌地
<%_ } else { _%>
  角色指导: 络络十分爱慕{{user}}
  变化指导: 随着亲密度增加，络络会认为自己的一切都属于{{user}}，包括性命。
<%_ } _%>
有好多<%_ _%>之类的东西啊！看不懂！好复杂！其实不然——

<%_ _%>实际上是为了区分提示词（就是发送给AI的内容）和真正的代码。也就是说，你把<%_ _%>看成是一个括号就行了，括号里的内容是真正的代码。把他忽略掉也可以，让我们看看，忽略掉后剩下什么？

const 亲密度 = getvar('变量.络络.亲密度');
if (亲密度 < 20) /*亲密度阶段1*/ {
  角色指导: 目前络络对{{user}}并不熟悉，络络应该对USER很冷淡。
  变化倾向: 随着亲密度增加，络络会变得更加关心。
}
有稍微理解一些吗？

const实际上这就是将这个值放到亲密度里边，实际上就是为亲密度变量起了个小名（这个步骤是必须的…）
你可以不需要理解，只需要在写if之前复制上const 亲密度 = getvar(‘变量.络络.亲密度’);
亲密度三个字可以换成任何东西，只需要你自己知道是什么就行，比如value啊之类的，只是一个名字！
注意喔，相同条目之间只需要使用一次const，不同条目之间必须使用不同的名字

因为变量是亲密度，所以我把小名命名成亲密度了！

让我们来看IF:

if (亲密度 < 20) {
if是如果的意思！也就是条件判断，就只是从字面意思都很容易理解吧？如果，亲密度小于20。这个花括号呢就是如果之后的那么，你的所有提示词都应该写在花括号里。
呃，但是这个花括号怎么只有半边？请你往下看

<%_ } else if (亲密度 < 40) { _%>
让我们忽略掉<%_ %>，看看剩下什么

} else if (亲密度 < 40) {
原来右边花括号在这里！也就是说，我们的代码实际上是这样的:

if (亲密度 < 20) {亲密度小于20的提示词}

else if (亲密度 < 40) {亲密度小于40的提示词}
这样看是不是就好理解了？但是实际情况下我们的提示词大概率是需要换行的！因此

if (亲密度 < 20) {
  第一行亲密度小于20的提示词
  第二行提示词喵
}
这样的方式就可以换行了！在if后面，我们紧接着还要来一个else if，来判断如果小于40。
请注意，这里小于40肯定不包含0~20，因为如果小于20的话，就已经执行了第一个if里的内容了。

else if (亲密度 < 40) {
  亲密度小于40的提示词
  第二行提示词喵
}
但是我们的真正的代码是要加<%_ _%>的，为了方便使用<%_ _%>，我们还可以这样将第一个if最后一个括号和第二个else if来看成一行

<%_ if (亲密度 < 20) { _%>
  角色指导: 目前络络对{{user}}并不熟悉，络络应该对USER很冷淡。
  变化倾向: 随着亲密度增加，络络会变得更加关心。
<%_ } else if (亲密度 > 40) { _%>
  角色指导: 络络开始对{{user}}产生好感，开始主动关心{{user}}。
  变化倾向: 随着亲密度增加，络络会变得爱上{{user}}。
<%_ } else { _%>

  除了小于20和小于40的情况，也就是大于40的全部数值

<%_ } _%>
是不是一下就看懂了！当然，只有else if来结尾是不正确的，因此最后一个一定是else，如果你只需要判断两个，那就不需要else if:

<%_ if (亲密度 < 50) { _%>

  亲密度小于50的提示词

<%_ } else { _%>

  亲密度大于50的提示词

<%_ } _%>
太好了，我理解了一切😈。

再让我们看看那个yaml的世界书内容:

---
角色阶段://这些都是个人的写法！大概是上方告诉AI关联变量、角色指导、变化倾向是什么，之后会在选择性发送的提示词中使用这些小标题。你也可以使用你自己喜欢的写法喔，只需要让AI看懂就可以！
  描述: 经过剧情发展后角色成长得到的新人设
  关联变量: 各角色的阶段关联有不同的变量，仅用于判断其角色阶段是否应该发生变化，不影响阶段的具体人设
  角色指导: 角色在这个阶段会采取的行为和态度等
  变化倾向: 随着associated variable接近下一阶段，角色逐渐发生的变化

络络:
  关联变量: 亲密度({{getvar::变量.络络.亲密度}})
  阶段名称:
    阶段1: 暗中观察(20以下)
    阶段2: 谨慎靠近(20~39)
    阶段3: 敞开心扉(40~59)
    阶段4: 依恋信任(60~79)
    阶段5: 永恒的爱(79~100及以上)

络络的行为必须优先遵守以下指导，其中关于日记部分是针对日记编写的内容，正文中则是针对日常生活中的剧情描写:
<%_ const 亲密度 = getvar('变量.络络.亲密度'); _%>//注意！这里复杂的东西就是提示词模板支持的js代码！看下方描述，我来告诉你怎么看懂，真的非常非常简单的！
<%_ if (亲密度 < 20) { _%>
  角色指导: 目前络络对{{user}}并不熟悉，络络应该对USER很冷淡。
  变化倾向: 随着亲密度增加，络络会变得更加关心。
<%_ } else if (亲密度 > 40) { _%>
  角色指导: 络络开始对{{user}}产生好感，开始主动关心{{user}}。
  变化倾向: 随着亲密度增加，络络会变得爱上{{user}}。
<%_ } else if (亲密度 > 60) { _%>
  角色指导: 络络对{{user}}产生爱意，开始主动关心{{user}}。
  变化倾向: 随着亲密度增加，络络会变得爱上{{user}}。
<%_ } else if (亲密度 > 80) { _%>
  角色指导: 络络会对{{user}}表白，
  变化倾向: 随着亲密度增加，络络会对{{user}}死心塌地
<%_ } else { _%>
  角色指导: 络络十分爱慕{{user}}
  变化指导: 随着亲密度增加，络络会认为自己的一切都属于{{user}}，包括性命。
<%_ } _%>
实际上呢，对AI发送的内容是变化的，如果亲密度在18，那么AI看到的世界书会是什么样子？:

---
角色阶段:
  描述: 经过剧情发展后角色成长得到的新人设
  关联变量: 各角色的阶段关联有不同的变量，仅用于判断其角色阶段是否应该发生变化，不影响阶段的具体人设
  角色指导: 角色在这个阶段会采取的行为和态度等
  变化倾向: 随着associated variable接近下一阶段，角色逐渐发生的变化

络络:
  关联变量: 亲密度(18)
  阶段名称:
    阶段1: 暗中观察(20以下)
    阶段2: 谨慎靠近(20~39)
    阶段3: 敞开心扉(40~59)
    阶段4: 依恋信任(60~79)
    阶段5: 永恒的爱(79~100及以上)

络络的行为必须优先遵守以下指导，其中关于日记部分是针对日记编写的内容，正文中则是针对日常生活中的剧情描写:
  角色指导: 目前络络对{{user}}并不熟悉，络络应该对USER很冷淡。
  变化倾向: 随着亲密度增加，络络会变得更加关心。
没错！你对比一下会发现{{getvar::变量.络络.亲密度}}已经被替换成了18，是我们变量的数值，

而下方写了很多代码那里，只有<20的部分被实际发送了！因此大模型会指导，络络现在必须要对USER很冷淡了──

同样地，如果好感度是38，那就会发送<40的部分！

当然，我这里因为只是示例，所以只写了两行，实际上你可以不用在意token数量写很多，反正只会发送其中一条！

你已经了解了提示词模板的绝大多数内容了！这也是我的角色卡用到的全部内容……

关于正则
我们做了这么多，还需要什么？

我还没有初始化这些变量！这些变量在故事开始的时候是多少？
@变量=数值@的格式不是SillyTavern带的变量更新格式呀，这样并不会更新变量！
更新变量那里似乎用到的COT的技巧，那我是不是还需要写个正则来对玩家隐藏COT和变量更新？
我、我想做个状态栏让玩家展示这些变量，和角色阶段的名字！
是的，我们正则就是做这些，以下是正则内容，非常简单易用，如果你跟我用一样的格式则不怎么需要修改。

请建立以下正则！你可以直接将它们移动到全局正则中暂存，然后去你的角色卡里移动到局部正则！

注意，正则的排序为：

- 初始化
- 设置变量
- 两个隐藏
初始化
脚本名称:变量-初始化
查找正则表达式: \|初始化变量\|
替换为:
<UpdateVariable>
@变量.络络.亲密度=10@
@变量.络络.当前时间阶段=1@
@变量.络络.下次响应界面选择判断=0@
@变量.络络.阅读日记数量=0@
@变量.络络.拥有联系方式=0@
</UpdateVariable>

作用范围: AI输出
其他选项: 仅格式显示，仅格式提示词
如此一来，在正则内设置你的变量和一开始的值，在开局第一条消息上写上|初始化变量|，所有变量就拥有了最开始的数值！

设置变量
脚本名称:变量-设置变量
查找正则表达式: /@\s*([^@\n]*?)\s*@?\s*=\s*(?:.*?⇒)?'?([^@\n]*?)'?\s*((@$)|(?=@))/gm
替换为:
{{setvar::$1::$2}}
作用范围: 用户输入、AI输出、快捷命令
其他选项: 仅格式显示、仅格式提示词
这样，我们就能用@变量=旧⇒新@的格式来让AI修改变量了！

隐藏变量更新与分析
脚本名称: 变量-隐藏变量更新分析
查找正则表达式: /<Analysis>.*?(?:</Analysis>|$)/gs
替换为: (这里请空着，用来隐藏思维链)
作用范围: 用户输入、AI输出
其他选项: 仅格式显示、仅格式提示词
隐藏了变量分析，同样的，隐藏变量更新

脚本名称: 变量-隐藏变量更新
查找正则表达式:/<UpdateVariable>.*?(?:<\/UpdateVariable>|$)/gs
替换为:（同样空着）
作用范围: 用户输入、AI输出
其他选项: 在编辑时运行、仅格式显示、仅格式提示词
这样变量更新也被隐藏，用户看不到变量更新啦！

基于变量的状态栏
想制作一个状态栏，对玩家显示这些变量？

脚本名称:状态栏
查找正则表达式:\[巧克力状态栏\|位置[:: ]\s*(.*?)\s*\]
替换为:
名字: 巧克力
位置: $1
好感度: {{getvar::变量.巧克力.好感度}}
当前情绪: {{getvar::变量.巧克力.当前情绪}}
作用范围: AI输出
其他选项: 仅格式显示
这样的话，[巧克力状态栏|位置:宿舍] 就会被替换为:

名字: 巧克力
位置: 宿舍
好感度: 0
当前情绪: 自闭
更多的用法不作介绍，若难以理解可以询问AI？

有了以上正则，我们做到了：

在故事一开始就赋予了角色或世界初始变量
可以用更简单不容易掉格式的方式来让AI更新变量
对用户和AI都隐藏过去的变量更新情况，让他不要懒惰不更新变量
基于变量的状态栏！这下绝对不会乱编了!还不会要求模型的智商高😈
记得，在你的每条开局第一条消息上加上|初始化变量|，这样所有变量就被初始化并且有数值！
记得，若要使用状态栏，在AI的消息下方使用[巧克力的状态栏|位置:宿舍]这样的方式来放置状态栏！
如果需要实时查看变量，并且不希望经常点开小铅笔，请往下看：其他你大概率会需要的东西这一栏目

引入酒馆助手修复和强化本变量方法
这是对本变量方法的强力补充，请务必使用
省流：安装酒馆助手. 将本脚本导入到酒馆助手的脚本库局部脚本中，让玩家也安装酒馆助手，其他你什么都不用做

如果想知道的话，请阅读文档

记得测试你的提示词！
我们写完了是一定要测试是否生效的，具体怎么测试呢…?

使用你的酒馆后台！那里存放着你真实发送的提示词，请去看看你写的选择发送是否真的有被选择性的发送！

手机端是Termux，电脑端则是你打开.bat后的那个cmd窗口

其他你大概率会需要的东西！
让酒馆助手帮玩家自动安装提示词模板

全局脚本:
https://discord.com/channels/1291925535324110879/1346952067234660352/1346952067234660352

方便的查看当前变量都有什么，以及对应的值是什么
扩展: https://github.com/LenAnderson/SillyTavern-Variable-Viewer/
注意！使用Variable-Viewer修改变量可能会出现问题，不要使用这个修改变量。

依靠代码而非AI实现某些复杂逻辑
想要用代码控制变量更新而不是容易出错的AI？不想折腾恶心的QR语法（毕竟AI可不会写QR）？
除了让ai更新变量，你也可以使用酒馆助手的函数来更新变量！

在DC楼的二楼（或者三楼？）有一个新的 .md，就是用了这种方法呢，你可以看看那一楼的新卡，或者把那个 .md 发给 AI 让它来写？

可以实现使用程序来控制变量的数值，具体使用场景：

只有完成某个事件后，好感度才允许被突破！
AI将变量改成了数值以外的东西？强制取消这次修改！
更多场景等待开发中喵
首先，请下文中的脚本-正则替换变量法辅助正则，

https://sillytavern-stage-girls-dog.readthedocs.io/tool_and_experience/variable_in_lorebook_without_qr/#id13

新建一个世界书条目，它的名字应该以[GENERATE:BEFORE]开头，使用蓝灯并且关闭掉，例如[GENERATE:BEFORE]config：在其中填写这样的内容：

<%_
/**
 * 以下是对经过 ai 更新后的变量进行读取, 并将所有变量读取结果存储在 config 对象中
 */
let config = {};

/* 读取变量... */
_%>

/**
 * 以下是在读取变量后, 根据变量满足的条件对变量进行一些更新操作:
 *   - 比如特殊条件没满足, 所以好感度还不能到 50 以上
 *   - 比如好感度上限就是 100, 不能超过
 *   - 比如剧情发展差不多了, 应该启用下一阶段的变量
 *   - ...
 */
<%_
let 修正提示 = '';

async function 更新变量(data) {
  await SillyTavern.eventSource.emit('在最新楼层更新变量', data);
  await Promise.all(Object.entries(data).map(([key, value]) => setvar(key, value)));
}

/* 对特殊情况进行处理... */
_%>

<%_
/**
 * 以下是广播 config 对象, 从而让其他世界书条目都能使用它
 */
define('config', config);
_%>

<%=
/**
 * 我们通过代码对变量进行了变化，为了让 ai 知道，我们对 ai 发送修正提示
 */
修正提示
_%>
例如，我们可能想要在变量.特殊条件==1时才允许变量.络络.好感度超过200，那么这个条目可以这样写：

<%_
let config = {};

_.set(config, '世界.特殊事件状态', Number(getvar('变量.世界.特殊事件状态') || 0));
_.set(config, '络络.好感度', Number(getvar('变量.络络.好感度') || 0));
_%>

<%_
// 准备给 ai 看的 修正提示
let 修正提示 = '';

async function 更新变量(data) {
  await SillyTavern.eventSource.emit('在最新楼层更新变量', data);
  await Promise.all(Object.entries(data).map(([key, value]) => setvar(key, value)));
}

if (config.世界.特殊事件状态 !== 1 && config.络络.好感度 > 199) {
  // 条件不满足, 则络络好感度限制最多为 199
  config.络络.好感度 = 199;

  // 调整完变量后, 还要用 `更新变量` 把更新情况以 `@变量=值@` 的形式记录到消息楼层中
  await 更新变量('变量.络络.好感度', config.络络.好感度);

  修正提示 = `<!-- 系统提示：检测到好感度在特殊事件完成前超过上限，已强制修正为 ${config.络络.好感度} -->`;
}
_%>

<%_ define('config', config); _%>
<%= 修正提示 _%>
不一样的事情请注意：

使用了config条目，你在其他条目中不要再用const value = getvar('变量.络络.好感度')，而是要用填入到config里的东西，比如这里就是config.络络.好感度和config.特殊条件呢！
同样地，你在其他条目中不要再使用{{getvar::变量.络络.好感度}}，而是使用<%= config.络络.好感度 _%>
提示词模板的设置里必须开启[GENERATE]选项
